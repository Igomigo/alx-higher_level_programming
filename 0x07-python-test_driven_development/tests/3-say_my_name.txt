The ``3-say_my_name`` module
============================

Using ``say_my_name``
---------------------

Importing the function from the module:
        >>> say_my_name = __import__("3-say_my_name").say_my_name

Checking for module docstring:
        >>> m = __import__("3-say_my_name").__doc__
        >>> len(m) > 5
        True

Checking for function docstring:
        >>> f = __import__("3-say_my_name").say_my_name.__doc__
        >>> len(f) > 5
        True

Testing for both strings args:
        >>> say_my_name("Igomigo", "Victor")
        My name is Igomigo Victor

Testing for a single string arg:
        >>> say_my_name("Fatai")
        My name is Fatai 

Testing for first string None:
        >>> say_my_name(None, "Fatai")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Testing for None as second string:
        >>> say_my_name("Igomigo", None)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string

Testing for non-string first arg:
        >>> say_my_name(12, "Fatai")
        Traceback (most recent call last):
        ...
        TypeError: first_name must be a string

Testing for non-string second arg:
        >>> say_my_name("Igomigo", 12)
        Traceback (most recent call last):
        ...
        TypeError: last_name must be a string

Testing for no args passed:
        >>> say_my_name()
        Traceback (most recent call last):
        ...
        TypeError: say_my_name() missing 1 required positional argument: 'first_name'

Testing for more than 2 arguments:
        >>> say_my_name("Igomigo", "Fatai", "Victor")
        Traceback (most recent call last):
        ...
        TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given
