The ``0-add_integer`` module
============================

Using ``add_integer``
-------------------

Importing function from module:
        >>> add_integer = __import__("0-add_integer").add_integer

Testing for module docstring:
        >>> mod = __import__("0-add_integer").__doc__
        len(mod) > 1
        True

Testing for function docstring:
        >>> func = __import__("0-add_integer").add_integer.__doc__
        len(func) > 1
        True

Testing for two positive integers:
        >>> add_integer(2, 4)
        6

Testing for positive and negative:
        >>> add_integer(2, -3)
        -1

Testing for two negative integers:
        >>> add_integer(-1, -2)
        -3

Testing for single integer argument:
        >>> add_integer(1)
        99

Testing for integer and string:
        >>> add_integer(2, "b")
        Traceback (most recent call last):
        ...
        TypeError: b must be an integer

Testing for string and integer:
        >>> add_integer("a", 3)
        Traceback (most recent call last):
        ...
        TypeError: a must be an integer

Testing for float and integer:
        >>> add_integer(2.45, 2)
        4

Testing for float and float:
        >>> add_integer(2.3, 4.5)
        6

Testing for large values:
        >>> add_integer(999999999999999999999999999999, 1)
        1000000000000000000000000000000

Testing for float(NaN):
        >>> add_integer(2, float("NaN"))
        Traceback (most recent call last):
        ...
        ValueError: cannot convert float NaN to integer

Testing for float(infinity):
        >>> add_integer(float(inf), 2)
        Traceback (most recent call last):
        ...
        OverFlowError: cannot convert float infinity to integer

Testing for list or dictionary passed as args:
        >>> add_integer([1], 4)
        Traceback (most recent call last)
        ...
        TypeError: a must be an integer

Testing for none number passed:
        >>> add_integer(0)
        98

Testing for None:
        >>> Traceback (most recent call last):
        ...
        TypeError: a must be an integer
