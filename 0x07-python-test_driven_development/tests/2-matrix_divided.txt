From "2-matrix_divided" module
==============================

Using "matrix_divided" function
-------------------------------

Importing the function from the module:
        >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Testing for module docstring:
        >>> m = __import__("2-matrix_divided").__doc__
        >>> len(m) > 5
        True

Testing for function docstring:
        >>> f = __import__("2-matrix_divided").matrix_divided.__doc__
        >>> len(f) > 5
        True

Testing for single list argument:
        >>> matrix_divided([1, 2, 3], 2)
        Traceback (most recent call last):
        ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing for 1 argument passed only:
        >>> matrix_divided([1, 3, 4])
        Traceback (most recent call last):
        ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

Testing for actual matrix of integers with second arg present:
         >>> matrix_divided([[1, 2, 3, 4],[5, 6, 7, 8],[9, 1, 2, 3]], 2)
         [[0.5, 1.0, 1.5, 2.0], [2.5, 3.0, 3.5, 4.0], [4.5, 0.5, 1.0, 1.5]]

Testing for ZeroDivisionError:
         >>> matrix_divided([[1, 2, 3], [2, 3, 4]], 0)
         Traceback (most recent call last):
         ...
         ZeroDivisionError: division by zero

Testing for function with two digit div:
         >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 33)
         [[0.03, 0.06, 0.09], [0.12, 0.15, 0.18]]

Testing for function with very large div:
         >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3333)
         [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Testing for function with negative div:
         >>> matrix_divided([[1, 2, 3], [2, 3, 4]], -2)
         [[-0.5, -1.0, -1.5], [-1.0, -1.5, -2.0]]

Testing for function with float div:
         >>> matrix_divided([[1, 2, 3], [2, 3, 4]], 2.12)
         [[0.47, 0.94, 1.42], [0.94, 1.42, 1.89]]

Testing for function with string div:
         >>> matrix_divided([[1, 2, 3], [2, 3, 4]], 'q')
         Traceback (most recent call last):
         ...
         TypeError: div must be a number

Testing for no argument passed:
         >>> matrix_divided()
         Traceback (most recent call last):
         ...
         TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Testing for string first argument:
         >>> matrix_divided([["string"], ["here"]], 2)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing for unequal row length of matrix:
         >>> matrix_divided([[1, 2, 3], [2, 3]], 2)
         Traceback (most recent call last):
         ...
         TypeError: Each row of the matrix must have the same size

Testing for single float value in int matrix:
         >>> matrix_divided([[1, 2, 3], [2, 3.432, 4]], 2)
         [[0.5, 1.0, 1.5], [1.0, 1.72, 2.0]]

Testing for None argument:
         >>> matrix_divided(None)
         Traceback (most recent call last):
         ...
         TypeError: matrix_divided() missing 1 required positional argument: 'div'

Testing None with a div arg:
         >>> matrix_divided(None, 2)
         Traceback (most recent call last):
         ...
         TypeError: matrix must be a matrix (list of lists) of integers/floats
